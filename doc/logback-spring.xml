<?xml version="1.0" encoding="UTF-8"?>

<configuration debug="false">

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <springProperty scope="context" name="BASE_LOG_HOME" source="logging.path" defaultValue="/export/Logs"/>
    <springProperty scope="context" name="BASE_LOG_FILE" source="spring.application.name"
                    defaultValue="application.log"/>

    <!--这里可以按环境不同进行不同的配置-->
    <springProfile name="production"></springProfile>
    <springProfile name="local,test,mot,sit,uat,pre-prod"></springProfile>

    <!--日志文件名定义-->
    <property name="LOG_HOME_FILENAME_INFO" value="${BASE_LOG_HOME}/${hostname}.log"/>
    <property name="LOG_PATTERN"
              value="${hostname}||%d{yyyy-MM-dd HH:mm:ss.SSS}||[%thread]||%-5level||%tid||%logger{36}||%msg%n"/>
    <property name="LOG_HOME_ERROR_FILENAME_INFO" value="${BASE_LOG_HOME}/${BASE_LOG_FILE}-error.log"/>

    <!-- 不带彩色的日志在控制台输出时候的设置 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                    <pattern>${LOG_PATTERN}</pattern>
            </layout>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <!--    <onMatch>DENY</onMatch>
                <onMismatch>ACCEPT</onMismatch>-->
        </filter>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <pattern>${LOG_PATTERN}</pattern>
            </layout>
        </encoder>
        <file>${LOG_HOME_FILENAME_INFO}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME_FILENAME_INFO}-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <!-- 如果按天来回滚，则最大保存时间为365天，365天之前的都将被清理掉 -->
            <maxHistory>365</maxHistory>
            <!-- 日志总保存量为1GB -->
            <totalSizeCap>20GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--文件达到 最大256MB时会被压缩和切割 -->
                <maxFileSize>256MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <pattern>${LOG_PATTERN}</pattern>
            </layout>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>${LOG_HOME_ERROR_FILENAME_INFO}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>5MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>
    </root>

    <!--motan统计日志关闭-->
    <logger name="serviceStatsLog" level="WARN"/>


</configuration>